pipeline:
  projectIdentifier: defaultproject
  orgIdentifier: default
  tags: {}
  stages:
    - stage:
        name: ecs
        identifier: ecs
        description: ""
        type: Deployment
        spec:
          serviceConfig:
            serviceRef: vamsi_ecs
            serviceDefinition:
              spec:
                variables:
                  - name: serviceName
                    type: String
                    value: <+input>
                  - name: desiredCount
                    type: Number
                    value: 1
                manifests:
                  - manifest:
                      identifier: taskDef
                      type: EcsTaskDefinition
                      spec:
                        store:
                          type: Github
                          spec:
                            connectorRef: GitHubAccHttpConnectorForAutomationTest
                            gitFetchType: Branch
                            paths:
                              - ECS/sample/RegisterTaskDefinitionRequest.yaml
                            repoName: PipelinesNgAutomation
                            branch: master
                  - manifest:
                      identifier: serviceDef
                      type: EcsServiceDefinition
                      spec:
                        store:
                          type: Github
                          spec:
                            connectorRef: GitHubAccHttpConnectorForAutomationTest
                            gitFetchType: Branch
                            paths:
                              - ECS/sample/CreateServiceRequest.yaml
                            repoName: PipelinesNgAutomation
                            branch: master
                  - manifest:
                      identifier: Scaling
                      type: EcsScalingPolicyDefinition
                      spec:
                        store:
                          type: Github
                          spec:
                            connectorRef: GitHubAccHttpConnectorForAutomationTest
                            gitFetchType: Branch
                            paths:
                              - ECS/sample/PutScalingPolicyRequest.yaml
                            repoName: PipelinesNgAutomation
                            branch: master
                  - manifest:
                      identifier: Scalable
                      type: EcsScalableTargetDefinition
                      spec:
                        store:
                          type: Github
                          spec:
                            connectorRef: GitHubAccHttpConnectorForAutomationTest
                            gitFetchType: Branch
                            paths:
                              - ECS/sample/RegisterScalableTargetRequest.yaml
                            repoName: PipelinesNgAutomation
                            branch: master
                artifacts:
                  primary:
                    spec:
                      connectorRef: harnessdocker
                      imagePath: harness/todolist-sample
                      tag: "3"
                    type: DockerRegistry
              type: ECS
          infrastructure:
            environmentRef: ecs_env_vamsi
            infrastructureDefinition:
              type: ECS
              spec:
                connectorRef: AWSConnectorForAutomationTest
                region: us-east-1
                cluster: ecs-cluster-3
            allowSimultaneousDeployments: false
          execution:
            steps:
              - step:
                  name: Rolling Deployment
                  identifier: rollingDeployment
                  type: EcsRollingDeploy
                  timeout: 10m
                  spec: {}
            rollbackSteps:
              - step:
                  name: Rollback Rolling Deployment
                  identifier: rollbackRollingDeployment
                  type: EcsRollingRollback
                  timeout: 10m
                  spec: {}
        tags: {}
        failureStrategies:
          - onFailure:
              errors:
                - AllErrors
              action:
                type: StageRollback
  identifier: Test_Docker_Fargate_Rolling
  name: "Test_Docker_Fargate_Rolling "
