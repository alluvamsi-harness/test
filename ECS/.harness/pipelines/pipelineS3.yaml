pipeline:
  projectIdentifier: CD_Docs1
  orgIdentifier: default
  storeType: ""
  remoteType: create
  tags: {}
  stages:
    - stage:
        name: Deploy Service
        identifier: Deploy_Service
        description: ""
        type: Deployment
        spec:
          serviceConfig:
            serviceRef: severless
            serviceDefinition:
              spec:
                variables:
                  - name: serviceName
                    type: String
                    value: s3-sidecar
                manifests:
                  - manifest:
                      identifier: serverless
                      type: ServerlessAwsLambda
                      spec:
                        store:
                          type: Github
                          spec:
                            connectorRef: accwingssoftware
                            gitFetchType: Branch
                            paths:
                              - serverless
                            repoName: PipelinesNgAutomation
                            branch: master
                        configOverridePath: serverless_s3_multiple_artifacts.yaml
                artifacts:
                  primary:
                    spec:
                      connectorRef: AWS_Serverless
                      bucketName: piyush-for-s3testing
                      filePath: hello-world-automation-cdc.zip
                    type: AmazonS3
                  sidecars:
                    - sidecar:
                        spec:
                          connectorRef: AWS_Serverless
                          bucketName: piyush-for-s3testing
                          filePath: hello-world-automation-cdc.zip
                          tagType: value
                          identifier: second
                        identifier: second
                        type: AmazonS3
              type: ServerlessAwsLambda
          execution:
            steps:
              - step:
                  name: Serverless Aws Lambda Deploy
                  identifier: ServerlessAwsLambdaDeploy
                  type: ServerlessAwsLambdaDeploy
                  timeout: 10m
                  spec:
                    commandOptions: ""
            rollbackSteps:
              - step:
                  name: Serverless Aws Lambda Rollback
                  identifier: ServerlessAwsLambdaRollback
                  type: ServerlessAwsLambdaRollback
                  timeout: 10m
                  spec: {}
          infrastructure:
            environmentRef: ServerlessEnv
            infrastructureDefinition:
              type: ServerlessAwsLambda
              spec:
                connectorRef: AWS_Serverless
                stage: vamsi-dev1
                region: us-east-1
            allowSimultaneousDeployments: false
        tags: {}
        failureStrategies:
          - onFailure:
              errors:
                - AllErrors
              action:
                type: StageRollback
        delegateSelectors:
          - acctgroup
  identifier: pipelineS3
  name: pipelineS3
